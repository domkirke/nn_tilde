name: Build nn_tilde
on:
  push:
    tags:
      - "v*"

jobs:
  osx-arm64-build:
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - run: | 
          git submodule update --init --recursive
          git fetch --tags
          GIT_TRACE=1 git describe --tags --always
      - name: Setup LLVM
        run: |
          brew install llvm
          
      - name: Setup miniconda
        run: |
          curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh > miniconda.sh
          chmod 777 ./miniconda.sh
          bash ./miniconda.sh -b -u -p ./env
          source ./env/bin/activate
          pip install -r requirements.txt
      - name: Setup puredata
        run: |
          mkdir puredata_include
          curl -L https://raw.githubusercontent.com/pure-data/pure-data/master/src/m_pd.h -o puredata_include/m_pd.h
      - name: Build
        run: |
          mkdir build
          export CC=$(brew --prefix llvm)/bin/clang
          export CXX=$(brew --prefix llvm)/bin/clang++
          cd build
          cmake ../src -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_PREFIX_PATH=${{ github.workspace }}/env/lib/python3.12/site-packages/torch -DCMAKE_BUILD_TYPE=Release -DPUREDATA_INCLUDE_DIR=${{ github.workspace }}/puredata_include -DCMAKE_OSX_ARCHITECTURES=arm64
          make
      - name: Max/MSP Package creation
        run: |
          mkdir nn_tilde
          mkdir nn_tilde/help
          mv src/externals nn_tilde
          cp src/frontend/maxmsp/nn_tilde/nn~.maxhelp nn_tilde/help
          tar -czvf nn_max_msp_macOS_arm64.tar.gz nn_tilde
      - name: PureData Package creation
        run: |
          rm -fr nn_tilde
          mv build/frontend/puredata/nn_tilde .
          rm -fr nn_tilde/CMakeFiles/ nn_tilde/*.cmake nn_tilde/Makefile
          tar -czvf nn_puredata_macOS_arm64.tar.gz nn_tilde
      # - name: Upload binaries
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: nn_tilde
      #     path: |
      #       nn_max_msp_macOS_arm64.tar.gz
      #       nn_puredata_macOS_arm64.tar.gz

  osx-x64-build:
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - run: | 
          git submodule update --init --recursive
          git fetch --tags
          git describe --tags --always
      - name: Install x86_64 Homebrew
        run: |
          sudo rm -rf /usr/local/homebrew
          sudo mkdir -p /usr/local/homebrew
          sudo chown -R $(whoami) /usr/local/homebrew
          arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" --prefix=/usr/local/homebrew
          arch -x86_64 /usr/local/bin/brew shellenv >> $GITHUB_ENV
          export HOMEBREW_PREFIX: "/usr/local";
          export HOMEBREW_CELLAR: "/usr/local/Cellar";
          export HOMEBREW_REPOSITORY: "/usr/local/Homebrew";
      - name: Setup LLVM
        run: |
          arch -x86_64 /usr/local/bin/brew install llvm
          export LDFLAGS="-L/usr/local/homebrew/opt/llvm/lib"
          export CPPFLAGS="-I/usr/local/homebrew/opt/llvm/include"
          ls $LDFLAGS
          ls $CPPFLAGS

      - name: Setup miniconda
        run: |
          curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > miniconda.sh
          chmod 777 ./miniconda.sh
          bash ./miniconda.sh -b -u -p ./env
          source ./env/bin/activate
          arch -x86_64 pip install -r requirements.txt
          arch -x86_64 pip install cmake
          TARGET_DIR=$(find env/lib -type d -name "python3*")
          TARGET_DIR="${TARGET_DIR}/site-packages/torch/share/cmake/Caffe2/public"
          cp install/mkl.cmake "${TARGET_DIR}"
      - name: Setup puredata
        run: |
          mkdir puredata_include
          curl -L https://raw.githubusercontent.com/pure-data/pure-data/master/src/m_pd.h -o puredata_include/m_pd.h
      - name: Build
        run: |
          mkdir build
          export CC=$(brew --prefix llvm)/bin/clang
          export CXX=$(brew --prefix llvm)/bin/clang++
          cd build
          cmake ../src -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_PREFIX_PATH=${{ github.workspace }}/env/lib/python3.12/site-packages/torch -DCMAKE_BUILD_TYPE=Release -DPUREDATA_INCLUDE_DIR=${{ github.workspace }}/puredata_include -DCMAKE_OSX_ARCHITECTURES=x86_64
          make
      - name: Max/MSP Package creation
        run: |
          mkdir nn_tilde
          mkdir nn_tilde/help
          mv src/externals nn_tilde
          cp src/frontend/maxmsp/nn_tilde/nn~.maxhelp nn_tilde/help
          tar -czvf nn_max_msp_macOS_x86_64.tar.gz nn_tilde
      - name: PureData Package creation
        run: |
          rm -fr nn_tilde
          mv build/frontend/puredata/nn_tilde .
          rm -fr nn_tilde/CMakeFiles/nn_tilde/*.cmake nn_tilde/Makefile
          tar -czvf nn_puredata_macOS_x86_64.tar.gz nn_tilde
  #     - name: Upload binaries
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: nn_tilde
  #         path: |
  #           nn_max_msp_macOS_x64.tar.gz
  #           nn_puredata_macOS_x64.tar.gz

  windows-x64-build:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - run: git submodule update --init --recursive
      - name: Setup torch
        run: |
          curl -L https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-2.0.1%2Bcpu.zip -o libtorch.zip
          unzip libtorch.zip
      - name: Setup puredata
        run: |
          mkdir pd
          cd pd
          curl -L https://msp.puredata.info/Software/pd-0.53-2.msw.zip -o pd.zip
          unzip pd.zip
          mv pd*/src .
          mv pd*/bin .
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ../src -DCMAKE_PREFIX_PATH=${{ github.workspace }}/libtorch -DPUREDATA_INCLUDE_DIR=${{ github.workspace }}/pd/src -DPUREDATA_BIN_DIR=${{ github.workspace }}/pd/bin -A x64
          cmake --build . --config Release
      - name: Max/MSP Package creation
        run: |
          mkdir nn_tilde
          mkdir nn_tilde/help
          mv src/externals nn_tilde
          cp src/frontend/maxmsp/nn_tilde/nn~.maxhelp nn_tilde/help
          tar -czvf nn_max_msp_windows_x64.tar.gz nn_tilde
      - name: PureData Package creation
        run: |
          Remove-Item -Force -Recurse nn_tilde
          mkdir nn_tilde
          mv build/frontend/puredata/nn_tilde/Release/* nn_tilde/
          tar -czvf nn_puredata_windows_x64.tar.gz nn_tilde
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: nn_tilde
          path: |
            nn_max_msp_windows_x64.tar.gz
            nn_puredata_windows_x64.tar.gz

  # AutomaticRelease:
  #   runs-on: ubuntu-latest
  #   needs: [osx-arm64-build, osx-x64-build, windows-x64-build]
  #   steps:
  #     - name: Download build binaries
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: nn_tilde
  #     - name: Automated Release
  #       uses: "marvinpinto/action-automatic-releases@latest"
  #       with:
  #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #         prerelease: false
  #         files: |
  #           nn_max_msp_macOS_x64.tar.gz
  #           nn_puredata_macOS_x64.tar.gz
  #           nn_max_msp_macOS_arm64.tar.gz
  #           nn_puredata_macOS_arm64.tar.gz
  #           nn_max_msp_windows_x64.tar.gz
  #           nn_puredata_windows_x64.tar.gz
